services:
  postgresql:
    container_name: postgresql
    image: postgres:17.5-bullseye
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ogd
    networks:
      - olympia-custom-network
    volumes:
      - ./data/postgresql/ogd:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d ogd"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    profiles:
      - production
      - developer

  app:
    container_name: app
    build:
      context: ./src/app
    working_dir: /src/app
    entrypoint: /src/app/entrypoint.sh
    volumes:
      - ./src/app:/src/app
      - ./configs/.env.app:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    ports:
      - "8000:8000"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - olympia-custom-network
    restart: unless-stopped
    profiles:
      - production
      - developer

  agent:
    container_name: agent
    build:
      context: ./src/agent
    working_dir: /src/agent
    entrypoint: /src/agent/entrypoint.sh
    volumes:
      - ./src/agent:/src/agent
      - ./configs/.env.agent:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    ports:
      - "8001:8000"
    networks:
      - olympia-custom-network
    restart: always
    profiles:
      - production
      - developer

  ogdbot:
    container_name: ogdbot
    build:
      context: ./src/ogdbot
    working_dir: /src/ogdbot
    command: sh -c "python main.py"
    volumes:
      - ./src/ogdbot:/src/ogdbot
      - ./sounds:/src/sounds
      - ./configs/.env.ogdbot:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    depends_on:
      - app
    networks:
      - olympia-custom-network
    restart: always
    profiles:
      - production
      - developer

networks:
  olympia-custom-network:
    driver: bridge