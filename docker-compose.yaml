services:
  postgresql:
    container_name: postgresql
    image: postgres:17.5-bullseye
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gloryteam
    networks:
      - olympia-custom-network
    volumes:
      - ./data/postgresql/gloryteam:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d gloryteam"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    profiles:
      - production
      - tests

  fastapi:
    container_name: fastapi
    build:
      context: ./src/app
    environment:
      - PYTHONPATH=/src
    working_dir: /src/app
    command: sh -c "uvicorn main:app --reload --host 0.0.0.0 --port 8000"
    volumes:
      - ./src/app:/src/app
    ports:
      - "8000:8000"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - olympia-custom-network
    restart: always
    profiles:
      - production
      - tests

  agent:
    container_name: agent
    build:
      context: ./src/app
    environment:
      - PYTHONPATH=/src
    working_dir: /src/app
    command: sh -c "uvicorn main:app --reload --host 0.0.0.0 --port 8001"
    volumes:
      - ./src/app:/src/app
    ports:
      - "8000:8000"
    networks:
      - olympia-custom-network
    restart: always
    profiles:
      # - production
      - test

  ocbot:
    container_name: ocbot
    build:
      context: ./src/ocbot
    environment:
      - PYTHONPATH=/src
    working_dir: /src/ocbot
    command: sh -c "python main.py"
    volumes:
      - ./src/ocbot:/src/ocbot
      - ./sounds:/src/sounds
      - ./configs/.env.ocbot:/src/configs/.env
    depends_on:
      - fastapi
    networks:
      - olympia-custom-network
    restart: always
    profiles:
      - production

  testing:
    container_name: testing
    build:
      context: ./src/app
    working_dir: /
    command: sh -c "pytest tests/app --maxfail=1 --disable-warnings -v --cache-dir=/tmp/pytest_cache"
    environment:
      - PYTHONPATH=/src
    volumes:
      - ./src:/src
      - ./tests:/tests
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - olympia-custom-network
    restart: "no"
    profiles:
      - tests

networks:
  olympia-custom-network:
    driver: bridge